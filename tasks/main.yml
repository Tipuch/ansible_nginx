---

- name: NGINX | Install Nginx
  package:
    name: nginx
    update_cache: yes
    state: present
  tags: packages

- name: NGINX | Copy the SSL certificate to the remote server
  copy:
    content: "{{ ssl_crt }}"
    dest: "{{ ssl_dest_dir }}/{{ project_name }}.crt"
  notify: restart nginx
  when: use_ssl

- name: NGINX | Copy the SSL private key to the remote server
  copy:
    content: "{{ ssl_key }}"
    dest: "{{ ssl_dest_dir }}/{{ project_name }}.key"
  notify: restart nginx
  when: use_ssl

- name: NGINX | Ensure that a strong Diffie-Hellman group is used
  command: openssl dhparam -out /etc/ssl/certs/dhparams.pem 2048 creates=/etc/ssl/certs/dhparams.pem
  when: use_ssl

- name: NGINX | Create the Nginx configuration file
  template:
    src: "site.conf.j2"
    dest: "/etc/nginx/sites-available/{{ project_name }}.conf"
    backup: yes
  notify: restart nginx

- name: NGINX | Link to sites-enabled
  file:
    src: "/etc/nginx/sites-available/{{ project_name }}.conf"
    dest: "/etc/nginx/sites-enabled/{{ project_name }}.conf"
    state: link
  notify: restart nginx

- name: NGINX | Ensure that the default site is disabled 1
  file:
    path: /etc/nginx/conf.d/default
    state: absent
  notify: restart nginx

- name: NGINX | Ensure that the default site is disabled 2
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: restart nginx

- name: NGINX | Ensure Nginx service is started
  service:
    name: nginx
    state: started
    enabled: yes
